#!/usr/bin/env node

const yargs = require('yargs');

if (yargs.argv.debug && !process.env.DEBUG) {
  process.env.DEBUG = 'fractal:*';
}

const {dirname} = require('path');
const findUp = require('find-up');
const importCwd = require('import-cwd');
const updateNotifier = require('update-notifier');
const {uniqBy} = require('lodash');
const loudRejection = require('loud-rejection');
const debug = require('debug')('fractal:cli');
const {error, log} = require('@frctl/console');
const CommandStore = require('../src/command-store');
const settings = require('../src/settings');
const pkg = require('../package.json');

loudRejection();
updateNotifier({pkg}).notify();

try {

  let factory;
  let config = {};
  const configPath = findUp.sync(settings.configFiles);

  if (configPath) {
    const cwd = dirname(configPath);
    config = require(configPath);

    process.chdir(cwd);

    debug(`config file found: %s`, configPath);
    debug(`set current working directory: %s`, cwd);

    try {
      factory = importCwd('@frctl/fractal');
    } catch(err) {
      debug(err);
      log(`
        <error>No local Fractal instance found.</error>
        <debug>&nbsp;&nbsp;Have you installed the <cyan>@frctl/fractal</cyan> package in your project?</debug>
      `);
      process.exit(1);
    }

  } else {
    debug(`no config file found. Assuming global scope.`);
    factory = require('@frctl/fractal');
  }

  const app = factory(config);

  const cli = {
    configPath,
    cwd: process.cwd(),
    debug: Boolean(process.env.DEBUG),
    version: pkg.version
  };

  const commandStore = new CommandStore(app, cli, app.get('commands',[]));

  yargs.usage(settings.usage)
       .options(settings.options)
       .strict()
       .demandCommand(1, 'You must specify a command.');

  for (const cmd of commandStore.commands) {
    yargs.command(cmd);
    debug(`registered command: %s`, cmd.name);
  }

  yargs.argv;

} catch(err) {
  error(err);
  process.exit(1);
}
