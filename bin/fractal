#!/usr/bin/env node

const local = require('../.');
const Liftoff = require('liftoff');
const utils = require('@frctl/utils');
const commander = require('@frctl/cli');
const semver = require('semver');

const launcher = new Liftoff({
  name: 'fractal',
  processTitle: 'fractal',
  moduleName: '@frctl/fractal',
  configName: 'fractal.config',
  extensions: {
    '.js': null,
    '.json': null
  }
});

launcher.launch({}, function(env) {

  /**
   * Get or create Fractal instance
   */

  let app;
  const config = env.configPath ? require(env.configPath) : {};
  const scope = Boolean(env.configPath) ? 'project' : 'global';

  if (config instanceof local.Fractal || (config.constructor && config.constructor.name === 'Fractal')) {
    app = config;
  } else {
    const frctl = env.modulePath ? require(env.modulePath) : local;
    app = frctl(config);
  }

  if (semver.major(app.version) < 2) {
    app.cli.exec();
    return;
  }

  if (app.commands.length === 0) {
    console.log('No commands registered.'); // TODO: style error message properly
    process.exit(1);
  }

  /**
   * Initialise new CLI instance and run
   */

  const cli = commander(app, {
    scope: scope
  });

  for (const cmd of app.commands) {
    cli.addCommand(cmd);
  }

  cli.run();

});
