#!/usr/bin/env node

const Liftoff = require('liftoff');
const utils = require('@frctl/utils');
const semver = require('semver');

const launcher = new Liftoff({
  name: 'fractal',
  processTitle: 'fractal',
  moduleName: '@frctl/fractal',
  configName: 'fractal.config',
  extensions: {
    '.js': null,
    '.json': null
  }
});

launcher.launch({}, function(env) {

  let app;

  const argv = require('yargs').argv;
  const konsole = require('@frctl/console')({
    debug: argv.debug
  });

  const config = env.configPath ? require(env.configPath) : {};
  const scope = Boolean(env.configPath) ? 'project' : 'global';
  const debug = argv.debug;

  /**
   * Get or create Fractal instance
   */

  if (config.constructor && config.constructor.name === 'Fractal') {
    app = config;
    listen(app);
  } else {
    const factory = env.modulePath ? require(env.modulePath) : require('../.');
    app = factory();
    listen(app);
    app.configure(config);
  }

  if (semver.major(app.version) < 2) {
    app.cli.exec();
    return;
  }

  if (app.commands.count() === 0) {
    konsole.error('No commands registered.');
    process.exit(1);
  }

  const cli = require('@frctl/cli')(app, { scope, debug });

  for (const cmd of app.commands) {
    cli.addCommand(cmd);
  }

  cli.run();

  function listen(app) {
    app.on('log.*', (...args) => konsole.log(...args));
  }

});
