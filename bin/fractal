#! /usr/bin/env node

'use strict';

const semver         = require('semver');
const Liftoff        = require('liftoff');
const chalk          = require('chalk');
const updateNofifier = require('update-notifier');
const cliPackage     = require('../package.json');

const notifier = updateNofifier({
    pkg: cliPackage
});

const Fractal = new Liftoff({
    processTitle: 'fractal',
    moduleName: '@frctl/fractal',
    configName: 'fractal',
    v8flags: ['--harmony']
});

if (notifier.update) {
    process.on('exit', function () {
        console.log('');
        const table = new (require('cli-table2'))({
            head: [],
            chars: { mid: chalk.dim('─'), 'left-mid': '│', 'mid-mid': chalk.dim('─'), 'right-mid': '│' }
        });
        table.push([`Fractal update available! ${chalk.dim(notifier.update.current)} → ${chalk.green(notifier.update.latest)}`]);
        table.push([`Run ${chalk.cyan('npm i -g ' + notifier.update.name)} to update.`]);
        console.log(table.toString());
        console.log('');
	});
}

Fractal.launch({}, function(env){

    let app;
    let scope = 'global';

    if (env.configPath) {
        require(env.configPath);
        scope = 'project';
    }
    if (env.modulePath) {
        if (semver.gt(cliPackage.version, env.modulePackage.version)) {
            console.log(`Fractal version mismatch! Global: ${cliPackage.version} / Local: ${env.modulePackage.version}`);
        }
        app = require(env.modulePath);
    } else {
        app = require('../.');
    }
    
    app.cli.scope = scope;
    app.cli.exec();
});
